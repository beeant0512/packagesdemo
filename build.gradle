plugins {
    id 'java'
    id 'maven-publish'
}

group 'com.xstudio.demo'
version '1.0.0-SNAPSHOT'

apply plugin: 'idea'
apply plugin: 'jacoco'


sourceCompatibility = 1.8

repositories {
    maven {
        url 'http://maven.aliyun.com/nexus/content/groups/public/'
    }
    maven {
        url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'
    }
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile "org.projectlombok:lombok:1.18.10"
    annotationProcessor "org.projectlombok:lombok:1.18.10"

    // https://mvnrepository.com/artifact/com.alibaba/fastjson
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.62'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}


[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// 打包源码
task sourceJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourceJar
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/beeant0512/packagesdemo/")
            credentials {
                username = System.getenv("USER")
                password = System.getenv("PWD")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
    afterEvaluate {
        publications {
            libJar(MavenPublication) {
                from components["java"]
                artifact(tasks["sourcesJar"])
                pom {
                    description.set("repro of issue uploading sources jar to github package registry via gradle")
                }
            }
        }
    }
}

javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
    }
}
